{
  "version": 3,
  "sources": ["../../../../deps/phoenix_html/priv/static/phoenix_html.js", "../../../../deps/phoenix/assets/js/phoenix/utils.js", "../../../../deps/phoenix/assets/js/phoenix/constants.js", "../../../../deps/phoenix/assets/js/phoenix/push.js", "../../../../deps/phoenix/assets/js/phoenix/timer.js", "../../../../deps/phoenix/assets/js/phoenix/channel.js", "../../../../deps/phoenix/assets/js/phoenix/ajax.js", "../../../../deps/phoenix/assets/js/phoenix/longpoll.js", "../../../../deps/phoenix/assets/js/phoenix/presence.js", "../../../../deps/phoenix/assets/js/phoenix/serializer.js", "../../../../deps/phoenix/assets/js/phoenix/socket.js", "../../../../assets/js/sketchpad.js", "../../../../assets/js/app.js"],
  "sourcesContent": ["\"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        submit = document.createElement(\"input\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"none\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n\n    // Insert a button and click it instead of using `form.submit`\n    // because the `submit` function does not emit a `submit` event.\n    submit.type = \"submit\";\n    form.appendChild(submit);\n    submit.click();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\") && element.getAttribute(\"data-to\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = \"\"\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for(let i = 0; i < len; i++){ binary += String.fromCharCode(bytes[i]) }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", \"application/json\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within its own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body){\n    if(typeof(body) !== \"string\"){ body = arrayBufferToBase64(body) }\n    if(this.currentBatch){\n      this.currentBatch.push(body)\n    } else if(this.awaitingBatchAck){\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages){\n    this.awaitingBatchAck = true\n    this.ajax(\"POST\", \"application/x-ndjson\", messages.join(\"\\n\"), () => this.onerror(\"timeout\"), resp => {\n      this.awaitingBatchAck = false\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      } else if(this.batchBuffer.length > 0){\n        this.batchSend(this.batchBuffer)\n        this.batchBuffer = []\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, contentType, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), contentType, body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {Function} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {Function} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millisec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Phoenix uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Phoenix won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if(!this.logger && opts.debug){\n      this.logger = (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n    if(this.longPollFallbackMs && this.transport !== LongPoll){\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger && this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect(){\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key){ return this.sessionStore && this.sessionStore.getItem(key) }\n\n  storeSession(key, val){ this.sessionStore && this.sessionStore.setItem(key, val) }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500){\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log(\"transport\", `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if(this.getSession(`phx:fallback:${fallbackTransport.name}`)){ return fallback(\"memorized\") }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError(reason => {\n      this.log(\"transport\", \"error\", reason)\n      if(primaryTransport && !established){\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if(!primaryTransport){\n        // only memorize LP if we never connected to primary\n        if(!this.primaryPassedHealthCheck){ this.storeSession(`phx:fallback:${fallbackTransport.name}`, \"true\") }\n        return this.log(\"transport\", `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping(rtt => {\n        this.log(\"transport\", \"connected to primary after\", rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats(){\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(() => this.reconnectTimer.scheduleTimeout(), WS_CLOSE_NORMAL, \"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onopen = function (){ } // noop\n          this.conn.onerror = function (){ } // noop\n          this.conn.onmessage = function (){ } // noop\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimeoutTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "\nfunction map(obj, func){\n  return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n}\n\nfunction mergeObjects(obj1, obj2){\n  var obj3 = {};\n  var attrname;\n  for (attrname in (obj1 || {})) {\n    if (obj1.hasOwnProperty(attrname)) {\n      obj3[attrname] = obj1[attrname];\n    }\n  }\n  for (attrname in (obj2 || {})) {\n    if (obj2.hasOwnProperty(attrname)) {\n      obj3[attrname] = obj2[attrname];\n    }\n  }\n  return obj3;\n}\n\n\nexport function sanitize(str){\n  let div = document.createElement(\"div\")\n  div.appendChild(document.createTextNode(str))\n  return div.innerHTML\n}\n\n\nexport class Sketchpad {\n\n  constructor(el, userId, opts){\n    if(!el){ throw new Error('Must pass in a container element') }\n\n    this.el = el\n    this.userId = userId\n    this.opts = opts || {}\n    this.opts.aspectRatio = this.opts.aspectRatio || 1\n    this.opts.width = this.opts.width || this.el.clientWidth\n    this.opts.height = this.opts.height || this.opts.width * this.opts.aspectRatio\n    this.opts.line = mergeObjects({\n      color: '#000',\n      size: 5,\n      cap: 'round',\n      join: 'round',\n      miterLimit: 10\n    }, this.opts.line);\n\n    this.users = mergeObjects(this.buildDefaultUsers(this.userId), this.opts.data)\n    this.events = {}\n    this.eventBuffer = null\n    this.flushEventsEvery = 100\n    this.eventTimer = setInterval(() => this.flushEvents(), this.flushEventsEvery)\n    this.undos = [];\n\n    // Boolean indicating if currently drawing\n    this.sketching = false;\n\n    // Create a canvas element\n    this.canvas = document.createElement('canvas');\n    this.setCanvasSize(this.opts.width, this.opts.height);\n    this.resizeTimer = null\n    window.onresize = () => {\n      clearTimeout(this.resizeTimer)\n      this.resizeTimer = setTimeout(() => this.resize(this.el.clientWidth), 100)\n    }\n    el.appendChild(this.canvas);\n    this.context = this.canvas.getContext('2d');\n    // Event Listeners\n    this.canvas.addEventListener('mousedown', e => this.startLine(e));\n    this.canvas.addEventListener('touchstart', e => this.startLine(e));\n    this.canvas.addEventListener('mousemove', e => this.moveLine(e));\n    this.canvas.addEventListener('touchmove', e => this.moveLine(e));\n    this.canvas.addEventListener('mouseup', e => this.endLine(e));\n    this.canvas.addEventListener('mouseleave', e => this.endLine(e));\n    this.canvas.addEventListener('touchend', e => this.endLine(e));\n    this.fullRedraw()\n  }\n\n  flushEvents(){\n    if(this.eventBuffer){\n      this.getEvents(\"stroke\").forEach(cb => cb(this.eventBuffer.stroke))\n      if(this.sketching){ this.startLine(this.eventBuffer.event) }\n      this.eventBuffer = null\n    }\n  }\n\n  buildUser(userId, data){\n    return data || {id: userId, strokes: [], lastPaintedIndex: 0}\n  }\n\n  buildDefaultUsers(userId){\n    let defaults = {}\n    defaults[userId] = this.buildUser(userId)\n    return defaults\n  }\n\n  setCanvasSize(width, height) {\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  getCanvasSize() {\n    return({\n      width: this.canvas.width,\n      height: this.canvas.height\n    })\n  }\n\n  // Returns a points x,y locations relative to the size of the canvase\n  getPointRelativeToCanvas(point){\n    let precisionFactor = 100000\n    let canvasSize = this.getCanvasSize();\n    return({\n      x: Math.round((point.x / canvasSize.width) * precisionFactor) / precisionFactor,\n      y: Math.round((point.y / canvasSize.height) * precisionFactor)/ precisionFactor\n    });\n  }\n\n  isTouchEvent(e){ return e.type.indexOf('touch') !== -1 }\n\n  getCursorRelativeToCanvas(e) {\n    let cur = {};\n    let rect = this.canvas.getBoundingClientRect()\n\n    if (this.isTouchEvent(e)) {\n      cur.x = e.touches[0].pageX - rect.left\n      cur.y = e.touches[0].pageY - rect.top\n    } else {\n      cur.x = e.clientX - rect.left\n      cur.y = e.clientY - rect.top\n    }\n\n    return this.getPointRelativeToCanvas(cur);\n  }\n\n  getLineSizeRelativeToCanvas(size){\n    let canvasSize = this.getCanvasSize();\n    return size / canvasSize.width;\n  }\n\n  /**\n   * Since points are stored relative to the size of the canvas\n   * this takes a point and converts it to actual x, y distances in the canvas\n  */\n  normalizePoint(x, y){\n    var canvasSize = this.getCanvasSize();\n    return {\n      x: x * canvasSize.width,\n      y: y * canvasSize.height\n    };\n  }\n\n  /**\n   * Since line sizes are stored relative to the size of the canvas\n   * this takes a line size and converts it to a line size\n   * appropriate to the size of the canvas\n  */\n  normalizeLineSize(size){\n    return size * this.getCanvasSize().width\n  }\n\n  // Draw a stroke on the canvas\n  drawStroke(stroke) {\n    this.context.beginPath();\n    for (let i = 0; i < stroke.points.length - 1; i = i + 2) {\n      let start = this.normalizePoint(stroke.points[i], stroke.points[i + 1]);\n      let end = this.normalizePoint(stroke.points[i + 2], stroke.points[i + 3]);\n\n      this.context.moveTo(start.x, start.y);\n      this.context.lineTo(end.x, end.y);\n    }\n    this.context.closePath();\n\n    this.context.strokeStyle = stroke.color;\n    this.context.lineWidth = this.normalizeLineSize(stroke.size);\n    this.context.lineJoin = stroke.join;\n    this.context.lineCap = stroke.cap;\n    this.context.miterLimit = stroke.miterLimit;\n\n    this.context.stroke();\n  }\n\n\n  fullRedraw(){\n    map(this.users, (id, user) => {\n      user.lastPaintedIndex = 0\n      this.redrawUser(user.id)\n    })\n  }\n\n  redraw(){\n    map(this.users, (id, user) => this.redrawUser(id))\n  }\n\n  redrawUser(userId){\n    let user = this.users[userId]\n    let {strokes, lastPaintedIndex} = user\n    let length = strokes.length\n    if(!lastPaintedIndex){ lastPaintedIndex = 0 }\n\n    for(let i = lastPaintedIndex; i < length; i++) {\n      this.drawStroke(strokes[i])\n    }\n    if(length === 0){\n      user.lastPaintedIndex = 0\n    } else {\n      user.lastPaintedIndex = length - 1\n    }\n  }\n\n  // On mouse down, create a new stroke with a start location\n  startLine(e){\n    e.preventDefault();\n    this.sketching = true;\n    this.undos = [];\n\n    let cursor = this.getCursorRelativeToCanvas(e);\n    this.users[this.userId].strokes.push({\n      points: [cursor.x, cursor.y],\n      color: this.opts.line.color,\n      size: this.getLineSizeRelativeToCanvas(this.opts.line.size),\n      cap: this.opts.line.cap,\n      join: this.opts.line.join,\n      miterLimit: this.opts.line.miterLimit\n    })\n  }\n\n  getEvents(event){ return this.events[event] || [] }\n\n  moveLine(e){ if(!this.sketching){ return }\n    e.preventDefault();\n\n    let cursor = this.getCursorRelativeToCanvas(e)\n    let lastStroke = this.lastStroke(this.userId)\n    let points = lastStroke.points\n    points.push(cursor.x)\n    points.push(cursor.y)\n    this.redrawUser(this.userId)\n    this.eventBuffer = {stroke: lastStroke, event: e}\n  }\n\n  lastStroke(userId){\n    let strokes = this.users[userId].strokes\n    return strokes[strokes.length - 1]\n  }\n\n  endLine(e){ if(!this.sketching){ return }\n    e.preventDefault();\n\n    this.sketching = false;\n    let lastStroke = this.lastStroke(this.userId)\n    this.getEvents(\"stroke\").forEach(cb => cb(lastStroke))\n\n    // touchend events do not have a cursor position\n    if(this.isTouchEvent(e)){ return }\n\n    let cursor = this.getCursorRelativeToCanvas(e)\n    lastStroke.points.push(cursor.x)\n    lastStroke.points.push(cursor.y)\n    this.redrawUser(this.userId)\n  }\n\n  undo(){\n    let strokes = this.users[this.userId]\n    if(strokes.length === 0){ return }\n\n    this.undos.push(strokes.pop())\n    this.redrawUser(this.userId)\n  }\n\n  redo(){ if(this.undos.length === 0){ return }\n    let strokes = this.users[this.userId]\n    strokes.push(this.undos.pop())\n    this.redrawUser(this.userId)\n  }\n\n\n  clear(){\n    let canvasSize = this.getCanvasSize();\n    this.undos = [];  // TODO: Add clear action to undo\n    this.users = this.buildDefaultUsers(this.userId)\n    this.context.clearRect(0, 0, canvasSize.width, canvasSize.height)\n    this.redraw()\n  }\n\n  // Convert the sketchpad to a JSON object that can be loaded into\n  // other sketchpads or stored on a server\n  toJSON(){\n    let canvasSize = this.getCanvasSize();\n    return({\n        version: 1,\n        aspectRatio: canvasSize.width / canvasSize.height,\n        users: this.users\n    })\n  }\n\n  // Load a json object into the sketchpad\n  // @return {object} - JSON object to load\n  loadJSON(data){ this.strokes = data.strokes }\n\n  // Get a static image element of the canvas\n  getImage(){ return '<img src=\"' + this.getImageURL() + '\"/>' }\n\n  getImageURL(){ return this.canvas.toDataURL('image/png') }\n\n  //Set the line size\n  // @param {number} size - Size of the brush\n  setLineSize(size){ this.opts.line.size = size }\n\n  // Set the line color\n  // @param {string} color - Hexadecimal color code\n  setLineColor(color){ this.opts.line.color = color }\n\n  putStroke(userId, stroke, lineOpts){\n    setTimeout(() => {\n      stroke = mergeObjects(stroke, lineOpts)\n      if(!this.users[userId]){ this.users[userId] = this.buildUser(userId) }\n      this.users[userId].strokes.push(stroke)\n      this.redrawUser(userId)\n    }, 10)\n  }\n\n  // Resize the canvas maintaining original aspect ratio\n  // @param  {number} width - New width of the canvas\n  resize(width) {\n    let height = width * this.opts.aspectRatio;\n    this.opts.lineSize = this.opts.lineSize * (width / this.opts.width);\n    this.opts.width = width;\n    this.opts.height = height;\n\n    this.setCanvasSize(width, height);\n    this.fullRedraw();\n  }\n\n  on(event, callback){\n    if(!this.events[event]){ this.events[event] = [] }\n    this.events[event].push(callback)\n  }\n}\n", "// import css from \"../css/app.css\"\nimport \"phoenix_html\"\nimport {Socket, Presence} from \"phoenix\"\nimport {Sketchpad, sanitize} from \"./sketchpad\"\n\nlet socket = new Socket(\"/socket\", {\n  params: {token: window.userToken},\n  logger: function(kind, msg, data) {\n    console.log(`${kind}: ${msg}`, data)\n  }\n})\n\nlet App = {\n  init() {\n    socket.connect()\n\n    this.padChannel = socket.channel(\"pad:lobby\")\n    this.el = document.getElementById(\"sketchpad\")\n    this.pad = new Sketchpad(this.el, window.userame)\n\n    this.bind()\n\n    this.padChannel.join()\n      .receive(\"ok\", resp => console.log(\"joined!\", resp))\n      .receive(\"error\", resp => console.log(\"failed to join\", resp))\n  },\n\n  bindJason() {\n    let loginForm = document.getElementById(\"login-form\")\n    let usernameInput = document.getElementById(\"username-input\")\n    let jasonLoginBtn = document.getElementById(\"jason-login-btn\")\n\n    jasonLoginBtn.addEventListener(\"click\", e => {\n      console.log('logging in as jason')\n      e.preventDefault()\n      usernameInput.value = \"jason\"\n      loginForm.submit()\n    })\n  },\n\n  bind() {\n    this.pad.on(\"stroke\", data => this.padChannel.push(\"stroke\", data))\n\n    this.padChannel.on(\"stroke\", ({user_id, stroke}) => {\n      this.pad.putStroke(user_id, stroke, {color: \"#000\"})\n    })\n\n    this.clearButton = document.getElementById(\"clear-button\")\n    this.exportButton = document.getElementById(\"export-button\")\n\n    this.clearButton.addEventListener(\"click\", e => {\n      e.preventDefault()\n      this.padChannel.push(\"clear\", {})\n    })\n\n    this.padChannel.on(\"clear\", () => this.pad.clear())\n\n    this.exportButton.addEventListener(\"click\", e => {\n      console.log('exporting!')\n      let win = window.open()\n      win.document.write(`<img src=\"${this.pad.getImageURL()}\" />`)\n    })\n\n    this.msgInput = document.getElementById(\"message-input\")\n    this.msgContainer = document.getElementById(\"messages\")\n\n    this.padChannel.on(\"new_message\", ({user_id, body}) => {\n      this.msgContainer.innerHTML +=\n        `<b>${sanitize(user_id)}</b>: ${sanitize(body)}<br/>`\n      this.msgContainer.scrollTop = this.msgContainer.scrollHeight\n    })\n\n    addEventListener(\"keypress\", e => {\n      if(e.keyCode !== 13) return\n\n      let body = this.msgInput.value\n      this.msgInput.disabled = true\n\n      let onOk = () => {\n        this.msgInput.disabled = false\n        this.msgInput.value = \"\"\n      }\n\n      let onError = () => {\n        this.msgInput.disabled = false\n      }\n\n      this.padChannel.push(\"new_message\", {body})\n        .receive(\"ok\", onOk)\n        .receive(\"error\", onError)\n        .receive(\"timeout\", onError)\n    })\n  },\n}\n\nif (window.userToken !== \"\") {\n  App.init()\n} else {\n  console.log('no user token!')\n  App.bindJason();\n}\n\n"],
  "mappings": "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",
  "names": []
}
